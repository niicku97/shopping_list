{"version":3,"sources":["Components/DeleteComp.js","Components/ListItems.js","Components/PostComp.js","App.js","serviceWorker.js","index.js"],"names":["DeleteItemComponent","props","IconButton","onClick","data","id","numbers","axios","delete","then","res","console","log","catch","err","onDelete","edge","aria-label","useStyles","makeStyles","theme","root","width","maxWidth","backgroundColor","color","ListItems","classes","React","useState","checked","setChecked","List","className","items","map","item","ListItem","key","role","undefined","dense","button","value","currentIndex","indexOf","newChecked","push","splice","ListItemIcon","Checkbox","tabIndex","disableRipple","inputProps","style","ListItemText","primary","title","ListItemSecondaryAction","post","margin","spacing","AddItemComponent","state","setState","Box","boxShadow","display","justifyContent","m","p","bgcolor","onSubmit","e","preventDefault","noValidate","autoComplete","TextField","label","placeholder","onChange","target","required","Button","type","size","variant","fontWeight","App","setData","useEffect","get","result","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.20e0ce60.chunk.js","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\n\r\n\r\nexport default function DeleteItemComponent(props) {\r\n    const onDelete = () => {\r\n        const data = {\r\n            id: props.numbers.id,\r\n        };\r\n        axios\r\n        .delete(`https://murmuring-hollows-28431.herokuapp.com/api/todos/${props.numbers.id}/`, data)\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err));\r\n    };\r\n\r\n  \r\n    return (\r\n    <IconButton onClick={()=>{onDelete()}} edge=\"end\" aria-label=\"comments\">\r\n        <DeleteIcon />\r\n    </IconButton>\r\n    );\r\n  }\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport List from '@material-ui/core/List';\r\nimport ListItem from '@material-ui/core/ListItem';\r\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\r\nimport ListItemSecondaryAction from '@material-ui/core/ListItemSecondaryAction';\r\nimport ListItemText from '@material-ui/core/ListItemText';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport DeleteItemComponent from './DeleteComp.js';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    maxWidth: 680,\r\n    backgroundColor: 'transparent',\r\n    color: 'black',\r\n  },\r\n}));\r\n\r\nexport default function ListItems(props) {\r\n\r\n  const classes = useStyles();\r\n  const [checked, setChecked] = React.useState([0]);\r\n\r\n  const handleToggle = (value) => () => {\r\n    const currentIndex = checked.indexOf(value);\r\n    const newChecked = [...checked];\r\n\r\n    if (currentIndex === -1) {\r\n      newChecked.push(value);\r\n    } else {\r\n      newChecked.splice(currentIndex, 1);\r\n    }\r\n\r\n    setChecked(newChecked);\r\n  };\r\n\r\n  const onDelete = (value) => {\r\n      console.log(value)\r\n  }\r\n  return (\r\n    <List className={classes.root}>\r\n        {props.items.map(item => \r\n          <ListItem key={item.id} role={undefined} dense button onClick={handleToggle(item.id)}>\r\n            <ListItemIcon>\r\n              <Checkbox\r\n                edge=\"start\"\r\n                checked={checked.indexOf(item.id) !== -1}\r\n                tabIndex={-1}\r\n                disableRipple\r\n                inputProps={{ 'aria-labelledby': item.id }}\r\n              />\r\n            </ListItemIcon>\r\n            <div style={{width:'75%'}}>\r\n                <ListItemText id={item.id} primary={item.title} />\r\n            </div>\r\n            <ListItemSecondaryAction>\r\n                <DeleteItemComponent numbers={item}/>\r\n            </ListItemSecondaryAction>\r\n          </ListItem>\r\n        )}\r\n    </List>\r\n  );\r\n}","import React,{useState} from 'react';\r\nimport Button from '@material-ui/core/Button';\r\nimport axios from 'axios';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Box from '@material-ui/core/Box';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\n\r\n\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    post: {\r\n      '& > *': {\r\n        margin: theme.spacing(1),\r\n        width: '25ch',\r\n        backgroundColor: '#f4f4f4',\r\n        \r\n      },\r\n    },\r\n  }));\r\n  \r\nfunction AddItemComponent() {\r\n    const classes = useStyles();\r\n\r\n    const initialState = {\r\n        title: \"\"\r\n    };\r\n\r\n    const [state,setState] = useState(initialState);\r\n\r\n\r\n    const onTitleChange = e => {\r\n        setState({\r\n        title: e.target.value\r\n        });\r\n    };\r\n\r\n    const handleSubmit = e => {\r\n        e.preventDefault();\r\n        const data = {\r\n        title: state.title\r\n        };\r\n        axios\r\n        .post(\"https://murmuring-hollows-28431.herokuapp.com/api/todos/\", data)\r\n        .then(res => console.log(res))\r\n        .catch(err => console.log(err));\r\n        \r\n        setState({\r\n            title: \"\"\r\n        });\r\n    };\r\n\r\n    return (\r\n        <Box style={{backgroundColor: 'transparent'}} boxShadow={3} display=\"flex\" justifyContent=\"center\" m={1} p={1} bgcolor=\"background.paper\">\r\n            <form className={classes.post} onSubmit={handleSubmit} noValidate autoComplete=\"off\">\r\n                <TextField style={{backgroundColor: 'transparent'}} id=\"standard-basic\" label=\"Place your item\"\r\n                    placeholder=\"Title\" value={state.title}\r\n                    onChange={onTitleChange} required\r\n                    />\r\n                <Button type='Submit' size=\"large\" variant='outlined'style={{fontWeight:'bold', backgroundColor:'transparent'}}>Add</Button>\r\n            </form>\r\n        </Box>\r\n    )\r\n};\r\n\r\nexport default AddItemComponent;","import React, {useState, useEffect} from 'react';\nimport './App.css';\nimport ListItems from './Components/ListItems.js';\nimport AddItemComponent from './Components/PostComp.js';\nimport axios from 'axios';\n\n\nfunction App() {\n  const [data,setData] = useState([]);\n\n  useEffect(() => {\n    axios\n      .get(\"https://murmuring-hollows-28431.herokuapp.com/api/todos/\")\n      .then(result => setData(result.data));\n  }, []);\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <h1>Hello</h1>\n        <AddItemComponent />\n        <ListItems items={data}/>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}